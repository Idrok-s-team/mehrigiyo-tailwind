import type { Metadata } from 'next'
import { FC, ReactNode } from 'react'
import { Inter } from 'next/font/google'
import Link from 'next/link'
import { ActiveLink, Dropdown } from '@/components'
import { AvatarIcon, FlagUzIcon, LocationIcon, LogoIcon } from '@/assets/icons'
import { getShopTypes } from '@/api'

import './globals.css'
import HeaderActions from '@/components/HeaderActions'

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

interface IProps {
  children: ReactNode
}

const RootLayout: FC<IProps> = async ({ children }) => {
  const doctorTypesData = await getShopTypes()

  const titles = [
    { text: `Mahsulotlar katalogi`, href: `#` },
    { text: `Foto-lavhalar`, href: `#` },
    { text: `Yetkazib berish va to'lash`, href: `#` },
    { text: `Aksiya`, href: `#`, color: `#AB7A19` },
    { text: `Yangi`, href: `#`, color: `#53B175` },
  ]

  const languageItems = [
    {
      label: (
        <div className="flex items-center">
          <span>
            <FlagUzIcon />
          </span>
          <span>Uzbek</span>
        </div>
      ),
      id: 'uz',
      selected: true,
    },
  ]

  const navElements = [
    { label: 'Bosh sahifa', mainPath: '/', selected: true },
    { label: 'Onlayn shifokorlar', mainPath: '/online_doctors' },
    {
      label: 'Mahsulotlar',
      mainPath: '/products',
      dropdownItems: doctorTypesData.results
        ?.slice(0, 4)
        .map((product) => ({
          label: product.name,
          path: `/products/all?type=${product.id.toString()}`,
        }))
        .concat([{ label: `Hammasi+`, path: `/products/all` }]),
    },
    { label: 'Biz haqimizda', mainPath: '/about_us' },
    { label: 'Yangiliklar', mainPath: '/news' },
    { label: 'Yordam', mainPath: '/help' },
  ]

  const getNavElements = () => {
    return navElements.map(({ label, mainPath, dropdownItems }) => {
      if (dropdownItems) {
        const dropdownChildren = dropdownItems.map((item) => ({
          label: item.label,
          id: item.path,
        }))

        return (
          <ActiveLink href={mainPath} key={label}>
            <Dropdown items={dropdownChildren} />
          </ActiveLink>
        )
      } else {
        return (
          <ActiveLink href={mainPath} key={label}>
            {label}
          </ActiveLink>
        )
      }
    })
  }

  return (
    <html lang="en">
      <body className={inter.className}>
        <header className="sticky top-0 z-10">
          <nav className="flex items-center justify-between bg-green-light h-10 text-sm px-24">
            <ul className="flex gap-5">
              {titles.map(({ text, href }) => (
                <Link href={href} key={text}>
                  {text}
                </Link>
              ))}
            </ul>
            <ul className="flex items-center gap-5">
              <div>
                <Dropdown items={languageItems} />
              </div>
              <div className="flex items-center gap-2">
                <div>Toshkent shahar</div>
                <div>
                  <LocationIcon />
                </div>
              </div>
              <div className="flex items-center gap-2">
                <div>Kirish</div>
                <div>
                  <AvatarIcon />
                </div>
              </div>
            </ul>
          </nav>

          <nav className="flex items-center justify-between px-24 py-4 bg-[#addabe]">
            <section className="flex items-center gap-12">
              <div>
                <Link href={'#'}>
                  <LogoIcon />
                </Link>
              </div>
              <div className="flex gap-3 text-sm">{getNavElements()}</div>
            </section>

            <section>
              <HeaderActions />
            </section>
          </nav>
        </header>

        <main className="px-24">{children}</main>
      </body>
    </html>
  )
}

export default RootLayout
